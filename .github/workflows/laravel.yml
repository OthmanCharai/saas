name: Laravel Test and Deploy

on:
  push:
    branches:
      - main
      - '[0-9]+\.[0-9]+'
  pull_request:
  schedule:
    # Run every day at 10 AM UTC to discover potential issues with dependencies like PHP updates etc.
    - cron: '0 10 * * *'

jobs:
  phpunit:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php-versions: ['8.0']
        db-types: ['mysql']
  
    name: PHPUnit ${{ matrix.php-versions }} ${{ matrix.db-types }}

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: laravel
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v2
      # Codecov needs access to previous commits, so we add fetch-depth: 0
      with:
        fetch-depth: 0
    
    - name: Setup PHP, with composer and extensions
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql, pdo_mysql
        coverage: pcov
        ini-values: pcov.directory=., pcov.exclude="~vendor~"
    
    - name: Install Laravel
      run: |
        export DB_CONNECTION="mysql"
        export DB_HOST="127.0.0.1"
        export DB_PORT=${{ job.services.mysql.ports['3306'] }}        
        export DB_USERNAME="root"
        export DB_DATABASE="laravel"
        php -r "file_exists('.env') || copy('.env.testing', '.env');"
        composer validate
        composer install -q --no-ansi --no-interaction --prefer-dist --no-progress --no-suggest
        php artisan key:generate
        chmod -R 777 storage bootstrap/cache

    - name: Run tests - database = ${{ matrix.db-types }}
      run: |
        if [[ "${{ matrix.php-versions }}" == "8.0" ]] && [[ "${{ matrix.db-types }}" == "mysql" ]]; then
          php artisan test
        else
          php artisan test
        fi
      env:
        mysql_port: ${{ job.services.mysql.ports[3306] }}        

  misc:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        commands: ['PHPSTAN', 'CS Fixer']

    name: ${{ matrix.commands }}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v6.2

    - name: Setup PHP, with composer and extensions
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.0
        extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, mysql, pdo_mysql

    - name: Install Laravel
      run: |
        export DB_CONNECTION="mysql"
        export DB_HOST="127.0.0.1"
        export DB_PORT=${{ job.services.mysql.ports['3306'] }}        
        export DB_USERNAME="root"
        export DB_DATABASE="laravel"
        php -r "file_exists('.env') || copy('.env.testing', '.env');"
        composer validate
        composer install -q --no-ansi --no-interaction --prefer-dist --no-progress --no-suggest
        php artisan key:generate
        chmod -R 777 storage bootstrap/cache
    
    - name: Run ${{ matrix.commands }}
      run: |
        if [[ "${{ matrix.commands }}" == "PHPSTAN" ]]; then
          ./vendor/bin/phpstan analyse --memory-limit=2G
        elif [[ "${{ matrix.commands }}" == "CS Fixer" ]]; then
          for file in ${{ steps.changed-files.outputs.all_modified_files }}; do
            if [[ $file == *.php ]]; then
              cs_fix_files="${cs_fix_files} $file"
            fi
          done
          if [[ $cs_fix_files ]]; then
            ./vendor/friendsofphp/php-cs-fixer/php-cs-fixer fix --config=.php-cs-fixer.dist.php -v --dry-run --using-cache=no --show-progress=dots --diff $cs_fix_files
          fi
        else
          echo "Invalid command"
          exit 1
        fi